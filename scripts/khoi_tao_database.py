#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script kh·ªüi t·∫°o database cho d·ª± √°n Web Data Connector
D·ª± √°n t·ªët nghi·ªáp - K·∫øt n·ªëi Tableau v·ªõi SQL Server

M·ª•c ƒë√≠ch: T·∫°o database CryptoData v√† b·∫£ng d·ªØ li·ªáu ti·ªÅn ƒëi·ªán t·ª≠
S·ª≠ d·ª•ng: python khoi_tao_database.py
"""

def kiem_tra_va_cai_dat():
    """
    Ki·ªÉm tra v√† c√†i ƒë·∫∑t th∆∞ vi·ªán c·∫ßn thi·∫øt
    """
    try:
        import pymssql
        print("‚úÖ pymssql ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t")
        return True
    except ImportError:
        print("‚ùå pymssql ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t")
        print("üì¶ ƒêang c√†i ƒë·∫∑t pymssql...")
        
        try:
            import subprocess
            import sys
            
            # C√†i ƒë·∫∑t pymssql
            result = subprocess.run([
                sys.executable, "-m", "pip", "install", "pymssql"
            ], capture_output=True, text=True)
            
            if result.returncode == 0:
                print("‚úÖ C√†i ƒë·∫∑t pymssql th√†nh c√¥ng!")
                return True
            else:
                print(f"‚ùå L·ªói c√†i ƒë·∫∑t: {result.stderr}")
                return False
                
        except Exception as e:
            print(f"‚ùå L·ªói c√†i ƒë·∫∑t: {e}")
            return False

def tao_du_lieu_crypto():
    """
    T·∫°o d·ªØ li·ªáu m·∫´u cho ti·ªÅn ƒëi·ªán t·ª≠
    """
    from datetime import datetime
    return [
        ('bitcoin_1', 'Bitcoin', 'BTC', 43250.50, 847000000000, 1, 18500000000, 2.5, datetime.now(), 'usd', 'cryptocurrency', 'Ti·ªÅn ƒëi·ªán t·ª≠ h√†ng ƒë·∫ßu', 'active'),
        ('ethereum_1', 'Ethereum', 'ETH', 2580.75, 310000000000, 2, 12000000000, -1.2, datetime.now(), 'usd', 'cryptocurrency', 'N·ªÅn t·∫£ng h·ª£p ƒë·ªìng th√¥ng minh', 'active'),
        ('cardano_1', 'Cardano', 'ADA', 0.485, 17000000000, 8, 450000000, 3.8, datetime.now(), 'usd', 'cryptocurrency', 'Blockchain th·∫ø h·ªá 3', 'active'),
        ('binancecoin_1', 'BNB', 'BNB', 315.20, 48000000000, 4, 1200000000, 1.5, datetime.now(), 'usd', 'cryptocurrency', 'Token c·ªßa s√†n Binance', 'active'),
        ('solana_1', 'Solana', 'SOL', 98.45, 43000000000, 5, 2100000000, -0.8, datetime.now(), 'usd', 'cryptocurrency', 'Blockchain hi·ªáu su·∫•t cao', 'active')
    ]

def tao_du_lieu_chung_khoan():
    """
    T·∫°o d·ªØ li·ªáu m·∫´u cho ch·ª©ng kho√°n
    """
    from datetime import datetime
    return [
        ('aapl_1', 'Apple Inc.', 'AAPL', 185.25, 2890000000000, 1, 85000000000, 1.2, datetime.now(), 'usd', 'stock', 'C√¥ng ty c√¥ng ngh·ªá h√†ng ƒë·∫ßu', 'active'),
        ('msft_1', 'Microsoft Corp.', 'MSFT', 340.80, 2520000000000, 2, 45000000000, 0.8, datetime.now(), 'usd', 'stock', 'Ph·∫ßn m·ªÅm v√† cloud computing', 'active'),
        ('googl_1', 'Alphabet Inc.', 'GOOGL', 142.15, 1750000000000, 3, 28000000000, -0.5, datetime.now(), 'usd', 'stock', 'C√¥ng c·ª• t√¨m ki·∫øm v√† qu·∫£ng c√°o', 'active'),
        ('amzn_1', 'Amazon.com Inc.', 'AMZN', 145.60, 1520000000000, 4, 32000000000, 2.1, datetime.now(), 'usd', 'stock', 'Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ v√† AWS', 'active'),
        ('tsla_1', 'Tesla Inc.', 'TSLA', 220.45, 700000000000, 5, 24000000000, -1.8, datetime.now(), 'usd', 'stock', 'Xe ƒëi·ªán v√† nƒÉng l∆∞·ª£ng', 'active')
    ]

def tao_du_lieu_ban_hang():
    """
    T·∫°o d·ªØ li·ªáu m·∫´u cho b√°n h√†ng
    """
    from datetime import datetime
    return [
        ('product_1', 'Laptop Gaming', 'LTG001', 25000000, 150000000000, 1, 500, 5.2, datetime.now(), 'vnd', 'sales', 'Laptop ch∆°i game cao c·∫•p', 'available'),
        ('product_2', 'Smartphone 5G', 'SP5G002', 15000000, 300000000000, 2, 800, -2.1, datetime.now(), 'vnd', 'sales', 'ƒêi·ªán tho·∫°i th√¥ng minh 5G', 'available'),
        ('product_3', 'Tai nghe Bluetooth', 'BTH003', 2500000, 75000000000, 3, 1200, 8.5, datetime.now(), 'vnd', 'sales', 'Tai nghe kh√¥ng d√¢y ch·∫•t l∆∞·ª£ng cao', 'available'),
        ('product_4', 'Smart TV 4K', 'TV4K004', 18000000, 200000000000, 4, 350, 1.8, datetime.now(), 'vnd', 'sales', 'TV th√¥ng minh 4K 55 inch', 'available'),
        ('product_5', 'M√°y t√≠nh b·∫£ng', 'TAB005', 12000000, 180000000000, 5, 600, -1.2, datetime.now(), 'vnd', 'sales', 'M√°y t√≠nh b·∫£ng ƒëa nƒÉng', 'available')
    ]

def tao_du_lieu_nhan_su():
    """
    T·∫°o d·ªØ li·ªáu m·∫´u cho nh√¢n s·ª±
    """
    from datetime import datetime
    return [
        ('emp_1', 'Nguy·ªÖn VƒÉn An', 'NVA001', 25000000, 300000000, 1, 24, 10.5, datetime.now(), 'vnd', 'employee', 'K·ªπ s∆∞ ph·∫ßn m·ªÅm Senior', 'active'),
        ('emp_2', 'Tr·∫ßn Th·ªã B√¨nh', 'TTB002', 22000000, 264000000, 2, 18, 8.2, datetime.now(), 'vnd', 'employee', 'Chuy√™n vi√™n Marketing', 'active'),
        ('emp_3', 'L√™ Ho√†ng C∆∞·ªùng', 'LHC003', 18000000, 216000000, 3, 12, 5.5, datetime.now(), 'vnd', 'employee', 'K·∫ø to√°n tr∆∞·ªüng', 'active'),
        ('emp_4', 'Ph·∫°m Minh ƒê·ª©c', 'PMD004', 30000000, 360000000, 4, 36, 12.0, datetime.now(), 'vnd', 'employee', 'Qu·∫£n l√Ω d·ª± √°n', 'active'),
        ('emp_5', 'V√µ Th·ªã Hoa', 'VTH005', 20000000, 240000000, 5, 15, 6.8, datetime.now(), 'vnd', 'employee', 'Chuy√™n vi√™n nh√¢n s·ª±', 'active')
    ]

def tao_du_lieu_tuy_chinh():
    """
    T·∫°o d·ªØ li·ªáu t√πy ch·ªânh theo input c·ªßa ng∆∞·ªùi d√πng
    """
    from datetime import datetime
    
    print("\nüìù T·∫†O D·ªÆ LI·ªÜU T√ôY CH·ªàNH")
    print("-" * 40)
    
    loai_du_lieu = input("Nh·∫≠p lo·∫°i d·ªØ li·ªáu (VD: product, customer, etc.): ").strip()
    don_vi = input("Nh·∫≠p ƒë∆°n v·ªã (VD: vnd, usd, etc.): ").strip()
    so_luong = int(input("S·ªë l∆∞·ª£ng d√≤ng d·ªØ li·ªáu (1-100): ") or "5")
    
    du_lieu_tuy_chinh = []
    
    for i in range(min(so_luong, 100)):
        print(f"\nNh·∫≠p th√¥ng tin cho d√≤ng {i+1}:")
        ten_muc = input(f"T√™n m·ª•c {i+1}: ").strip() or f"M·ª•c {i+1}"
        ky_hieu = input(f"K√Ω hi·ªáu {i+1}: ").strip() or f"SYM{i+1:03d}"
        gia_tri = float(input(f"Gi√° tr·ªã s·ªë {i+1}: ") or str((i+1) * 1000))
        mo_ta = input(f"M√¥ t·∫£ {i+1}: ").strip() or f"M√¥ t·∫£ cho {ten_muc}"
        
        du_lieu_tuy_chinh.append((
            f"custom_{i+1}",
            ten_muc,
            ky_hieu,
            gia_tri,
            int(gia_tri * 1000000),  # gia_tri_lon
            i+1,  # thu_tu
            int(gia_tri * 100),  # gia_tri_phu
            round((i+1-3) * 2.5, 2),  # phan_tram_thay_doi
            datetime.now(),
            don_vi,
            loai_du_lieu,
            mo_ta,
            'active'
        ))
    
    return du_lieu_tuy_chinh

def tao_database_va_bang():
    """
    T·∫°o database v√† b·∫£ng d·ªØ li·ªáu
    """
    import pymssql
    from datetime import datetime
    
    # Th√¥ng tin k·∫øt n·ªëi
    thong_tin_ket_noi = {
        'server': '127.0.0.1',
        'port': 1235,
        'user': 'sa',
        'password': 'YourStrong!Pass123'
    }
    
    try:
        # K·∫øt n·ªëi ƒë·∫øn SQL Server (kh√¥ng ch·ªâ ƒë·ªãnh database)
        print("üîó ƒêang k·∫øt n·ªëi SQL Server...")
        ket_noi = pymssql.connect(
            server=thong_tin_ket_noi['server'],
            port=thong_tin_ket_noi['port'],
            user=thong_tin_ket_noi['user'],
            password=thong_tin_ket_noi['password']
        )
        
        con_tro = ket_noi.cursor()
        print("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!")
        
        # T·∫°o database
        print("üìÑ T·∫°o database TableauDataHub...")
        try:
            # T·∫Øt autocommit ƒë·ªÉ t·∫°o database
            ket_noi.autocommit(True)
            con_tro.execute("IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = 'TableauDataHub') CREATE DATABASE TableauDataHub")
            print("‚úÖ T·∫°o database th√†nh c√¥ng!")
        except Exception as e:
            if "already exists" in str(e).lower() or "ƒë√£ t·ªìn t·∫°i" in str(e).lower():
                print("üìÑ Database ƒë√£ t·ªìn t·∫°i")
            else:
                print(f"‚ö†Ô∏è L·ªói t·∫°o database: {e}")
                print("üîÑ Th·ª≠ ti·∫øp v·ªõi database master...")
        
        # B·∫≠t l·∫°i autocommit
        ket_noi.autocommit(False)
        
        # ƒê√≥ng k·∫øt n·ªëi v√† m·ªü l·∫°i v·ªõi database
        ket_noi.close()
        
        # K·∫øt n·ªëi l·∫°i v·ªõi database TableauDataHub
        ket_noi = pymssql.connect(
            server=thong_tin_ket_noi['server'],
            port=thong_tin_ket_noi['port'],
            user=thong_tin_ket_noi['user'],
            password=thong_tin_ket_noi['password'],
            database='TableauDataHub'
        )
        con_tro = ket_noi.cursor()
        
        # T·∫°o b·∫£ng linh ho·∫°t cho nhi·ªÅu lo·∫°i d·ªØ li·ªáu
        print("üìä T·∫°o b·∫£ng du_lieu_tong_hop...")
        cau_lenh_tao_bang = """
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='du_lieu_tong_hop' AND xtype='U')
        CREATE TABLE du_lieu_tong_hop (
            id NVARCHAR(50) PRIMARY KEY,
            ten_muc NVARCHAR(100) NOT NULL,
            ky_hieu NVARCHAR(20),
            gia_tri_so DECIMAL(18,8),
            gia_tri_lon BIGINT,
            thu_tu INT,
            gia_tri_phu BIGINT,
            phan_tram_thay_doi DECIMAL(10,4),
            cap_nhat_lan_cuoi DATETIME2,
            don_vi NVARCHAR(20),
            loai_du_lieu NVARCHAR(50),
            mo_ta NVARCHAR(200),
            trang_thai NVARCHAR(20),
            ngay_tao DATETIME2 DEFAULT GETDATE()
        )
        """
        
        con_tro.execute(cau_lenh_tao_bang)
        ket_noi.commit()
        print("‚úÖ T·∫°o b·∫£ng th√†nh c√¥ng!")
        
        # Ki·ªÉm tra v√† ch√®n d·ªØ li·ªáu m·∫´u
        print("üíæ Ki·ªÉm tra d·ªØ li·ªáu...")
        con_tro.execute("SELECT COUNT(*) FROM du_lieu_tong_hop")
        so_dong = con_tro.fetchone()[0]
        
        if so_dong == 0:
            print("üìù Ch·ªçn lo·∫°i d·ªØ li·ªáu m·∫´u:")
            print("1. Ti·ªÅn ƒëi·ªán t·ª≠ (Cryptocurrency)")
            print("2. Ch·ª©ng kho√°n (Stock Market)")
            print("3. B√°n h√†ng (Sales Data)")
            print("4. Nh√¢n s·ª± (HR Data)")
            print("5. T√πy ch·ªânh (Custom Data)")
            
            lua_chon = input("Ch·ªçn lo·∫°i d·ªØ li·ªáu (1-5): ").strip()
            
            if lua_chon == "1":
                du_lieu_mau = tao_du_lieu_crypto()
            elif lua_chon == "2":
                du_lieu_mau = tao_du_lieu_chung_khoan()
            elif lua_chon == "3":
                du_lieu_mau = tao_du_lieu_ban_hang()
            elif lua_chon == "4":
                du_lieu_mau = tao_du_lieu_nhan_su()
            elif lua_chon == "5":
                du_lieu_mau = tao_du_lieu_tuy_chinh()
            else:
                print("‚ö†Ô∏è Ch·ªçn m·∫∑c ƒë·ªãnh: Ti·ªÅn ƒëi·ªán t·ª≠")
                du_lieu_mau = tao_du_lieu_crypto()
            
            cau_lenh_chen = """
            INSERT INTO du_lieu_tong_hop 
            (id, ten_muc, ky_hieu, gia_tri_so, gia_tri_lon, thu_tu, 
             gia_tri_phu, phan_tram_thay_doi, cap_nhat_lan_cuoi, don_vi, loai_du_lieu, mo_ta, trang_thai)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """
            
            for dong in du_lieu_mau:
                con_tro.execute(cau_lenh_chen, dong)
            
            ket_noi.commit()
            print(f"‚úÖ Ch√®n {len(du_lieu_mau)} d√≤ng d·ªØ li·ªáu m·∫´u th√†nh c√¥ng!")
        else:
            print(f"üìä B·∫£ng ƒë√£ c√≥ {so_dong} d√≤ng d·ªØ li·ªáu")
        
        # Ki·ªÉm tra d·ªØ li·ªáu
        print("üîç Ki·ªÉm tra d·ªØ li·ªáu v·ª´a t·∫°o...")
        con_tro.execute("SELECT TOP 5 id, ten_muc, ky_hieu, gia_tri_so, loai_du_lieu FROM du_lieu_tong_hop ORDER BY thu_tu")
        ket_qua = con_tro.fetchall()
        
        for dong in ket_qua:
            print(f"  - {dong[1]} ({dong[2]}): {dong[3]:,.2f} - Lo·∫°i: {dong[4]}")
        
        ket_noi.close()
        return True
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
        return False

def main():
    """
    H√†m ch√≠nh
    """
    print("üöÄ Kh·ªüi t·∫°o Database SQL Server cho Web Data Connector")
    print("=" * 60)
    
    # B∆∞·ªõc 1: Ki·ªÉm tra v√† c√†i ƒë·∫∑t th∆∞ vi·ªán
    if not kiem_tra_va_cai_dat():
        print("‚ùå Kh√¥ng th·ªÉ c√†i ƒë·∫∑t th∆∞ vi·ªán c·∫ßn thi·∫øt")
        return
    
    # B∆∞·ªõc 2: T·∫°o database v√† b·∫£ng
    if tao_database_va_bang():
        print("\n" + "=" * 60)
        print("‚úÖ Ho√†n th√†nh kh·ªüi t·∫°o database!")
        print("üîó B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ch·∫°y Web Data Connector")
        print("üìä Database: TableauDataHub")
        print("üìã B·∫£ng: du_lieu_tong_hop") 
        print("üåê Ch·∫°y server: python tableau_web_data_connector.py")
    else:
        print("\n‚ùå Kh·ªüi t·∫°o database th·∫•t b·∫°i!")

if __name__ == "__main__":
    main()
